# Copyright 2007 Suraj N. Kurapati
# See the file named LICENSE for details.

desc: web page for the Internet

code: |
  # load the String#to_html and String#to_inline_html methods
  require 'erbook/html'

  class String
    # Transforms this UTF-8 string into HTML entities.
    def to_html_entities
      unpack('U*').map! {|c| "&##{c};"}.join
    end

    # Transforms this string into a valid URI fragment.
    # See http://www.nmt.edu/tcc/help/pubs/xhtml/id-type.html
    def to_uri_fragment
      # remove HTML tags from the input
      buf = gsub(/<.*?>/, '')

      # The first or only character must be a letter.
      buf.insert(0, 'a') unless buf[0,1] =~ /[[:alpha:]]/

      # The remaining characters must be letters, digits, hyphens (-),
      # underscores (_), colons (:), or periods (.) or Unicode characters
      buf.unpack('U*').map! do |code|
        if code > 0xFF or code.chr =~ /[[:alnum:]\-_:\.]/
          code
        else
          32 # ASCII character code for a single space
        end
      end.pack('U*').strip.gsub(/[[:space:]-]+/, '-')
    end
  end

  class Hash
    # Transforms this hash into a string of HTML attribute key=value pairs.
    def to_html_atts
      inject([]) {|s,(k,v)| s << %( #{k}="#{v}") }.join
    end
  end

  class Node
    # Returns the user-defined title for this node's content.
    def title
      @title ||= args[0]
    end

    # Returns the user-defined indentifer for this node.
    def id
      @id ||= args[1]
    end

    @@frags = []

    # Returns a unique URI fragment for this node.
    def url
      unless defined? @url
        frag = (id || title || object_id).to_s.to_uri_fragment
        frag << frag.object_id.to_s while @@frags.include? frag # make it unique

        @@frags << frag
        @url = frag
      end

      @url
    end

    # Returns the URI fragment for the location in the table
    # of contents / list of figures that points this node.
    def list_url
      @list_url ||= trace.object_id.to_s.to_uri_fragment
    end
  end

  # Returns a hyperlink to the given URL of
  # the given name and mouse-hover title.
  def link aUrl, aName = aUrl, aTitle = nil
    %{<a href="#{h aUrl}"#{%{ title="#{aTitle}"} if aTitle}>#{aName}</a>}
  end

  # Encodes the given input in base64 format.
  def encode_base_64 aInput
    [aInput].pack('m')
  end

  # Returns a HTML <img> tag that embeds the given image data.
  #
  # aData:: raw image image data in base64 encoding
  # aFormat:: format of the image data (e.g. PNG, JPG, GIF, etc.)
  # aAttrs:: additional attributes for the <img> tag
  #
  def embed_image_data aData, aFormat, aAtts = {}
    aAtts['src'] = "data:image/#{aFormat};base64,#{aData}"
    "<img#{aAtts.to_html_atts}/>"
  end

  # Returns a HTML <img> tag that embeds the given image file.
  #
  # aPath:: path to the image file
  # aFormat:: format of the image data (e.g. PNG, JPG, GIF, etc.)
  # aAttrs:: additional attributes for the <img> tag
  #
  def embed_image_file aPath, aFormat = aPath[/\w+$/], aAttrs = {}
    data = encode_base_64 File.read(aPath)
    embed_image_data data, aFormat, aAttrs
  end

  # load admonition icons
    Icon = Struct.new(:path, :name, :format, :data)

    class Icon
      # Returns the CSS class for this icon.
      def css_class
        @css_class ||= "icon-#{name}"
      end
    end

    ICONS = {}

    Dir[File.join(ERBook::FORMATS_DIR, 'html.icons', '*.*')].each do |path|
      ext = File.extname(path)
      name = File.basename(path, ext)
      data = encode_base_64 File.read(path)

      ICONS[name] = Icon.new(path, name, ext.sub('.', ''), data)
    end


nodes:
  ##
  # Structure

  header: &header
    toc: false
    lof: false
    index: false
    number: false
    silent: true
    output: <%= @node.content.to_html %>

  header_outside_above: &header_insert
    toc: false
    lof: false
    index: false
    number: false
    silent: true
    output: <div class="<%= @node.type %>"><%= @node.content.to_html %></div>

  header_inside_above:  *header_insert
  header_inside_below:  *header_insert
  header_outside_below: *header_insert

  footer:               *header
  footer_outside_above: *header_insert
  footer_inside_above:  *header_insert
  footer_inside_below:  *header_insert
  footer_outside_below: *header_insert

  abstract:
    toc: false
    lof: false
    index: false
    number: false
    silent: true
    output: |
      <% label = @node.type.capitalize %>
      <div id="<%= label %>">
        <h1 class="title"><a class="here" href="#<%= label %>"><%= label %></a></h1>
        <div class="content"><%= @node.content.to_s.to_html %></div>
      </div>


  ##
  # Organization

  part: &latex
    toc: true
    lof: false
    index: true
    number: true
    output: |
      <div class="<%= @node.type %>">
        <h1 class="title">
          <%= @node.type.capitalize %>
          <a class="list" id="<%= @node.url %>" href="#<%= @node.list_url %>"><%= @node.index %></a>

          <br/>

          <a class="here" href="#<%= @node.url %>"><big><%= @node.title.to_s.to_inline_html %></big></a>
        </h1>

        <div class="content"><%= @node.content.to_s.to_html %></div>
      </div>

  chapter: *latex

  section:
    toc: true
    lof: false
    index: true
    number: true
    output: |
      <% level = [6, @node.depth + 1].min %>
      <div class="<%= @node.type %>">
        <h<%= level %> class="title">
          <a class="list" id="<%= @node.url %>" href="#<%= @node.list_url %>"><%= @node.index %></a>&nbsp;&nbsp;<a class="here" href="#<%= @node.url %>"><%= @node.title.to_s.to_inline_html %></a>
        </h<%= level %>>
        <div class="content"><%= @node.content.to_s.to_html %></div>
      </div>

  paragraph:
    toc: false
    lof: false
    index: false
    number: false
    output: |
      <div class="<%= @node.type %>">
        <p class="title" id="<%= @node.url %>"><a class="here" href="#<%= @node.url %>"><%= @node.title.to_s.to_inline_html %></a></p>
        <div class="content"><%= @node.content.to_s.to_html %></div>
      </div>


  ##
  # Admonitions

  tip: &admonition
    toc: false
    lof: true
    index: false
    number: true
    output: |
      <div class="<%= @node.type %>">
        <p class="title"><a class="list" id="<%= @node.url %>" href="#<%= @node.list_url %>"><%= @node.type.capitalize %> <%= @node.number %></a>.&nbsp;&nbsp;<a class="here" href="#<%= @node.url %>"><%= @node.title.to_s.to_inline_html %></a></p>

        <div class="content <%=
          $use_icons = true unless defined? $use_icons

          if $use_icons and icon = ICONS[@node.type]
            ($icons_used ||= []) << icon
            icon.css_class
          end
        %>"><%= @node.content.to_s.to_html %></div>
      </div>

  note: *admonition
  caution: *admonition
  warning: *admonition
  important: *admonition


  ##
  # Auxilary materials (formal blocks)
  # see http://www.sagehill.net/docbookxsl/FormalTitles.html

  figure: &formal
    toc: false
    lof: true
    index: false
    number: true
    output: |
      <div class="<%= @node.type %>">
        <p class="title"><a class="list" id="<%= @node.url %>" href="#<%= @node.list_url %>"><%= @node.type.capitalize %> <%= @node.number %></a>.&nbsp;&nbsp;<a class="here" href="#<%= @node.url %>"><%= @node.title.to_s.to_inline_html %></a></p>
        <div class="content"><%= @node.content.to_s.to_html %></div>
      </div>

  table: *formal
  example: *formal
  equation: *formal
  procedure: *formal


  ##
  # cross-references

  xref:
    toc: false
    lof: false
    index: false
    number: false
    output: |
      <%=
        scope = @nodes.select {|n| n.content}

        target = scope.find {|n| n.id == @node.args[0]} || # id has 1st priority
                 scope.find {|n| n.title == @node.args[0]}

        if target
          prefix = '%s %s' % [
            target.type.capitalize,
            target.index || target.number
          ]

          title_text =
            if target.type == 'reference'
              prefix
            else
              [prefix, target.title].compact.join('. ')
            end

          title_auto = @node.args.length < 2

          title_html =
            if title_auto
              title_text
            else
              @node.args[1].to_s
            end.to_inline_html

          %{<a class="#{@node.type}" href="##{target.url}"#{
            %{ title="#{title_text}"} unless title_auto
          }>#{title_html}</a>}
        else
          raise ArgumentError, "invalid cross-reference to #{@node.title.inspect}", @node.trace
        end
      %>


  ##
  # Bibliography

  reference:
    toc: false
    lof: false
    index: false
    number: true
    silent: true

  cite:
    toc: false
    lof: false
    index: false
    number: false
    output: |
      <%=
        target = @types['reference'].find {|n| n.title == @node.args[0]}

        if target
          '<sup>[%s]</sup>' % [
            '<a class="%s" href="#%s">%s</a>' % [
              @node.type,
              target.url,
              target.number
            ],
            *@node.args[1..-1]
          ].join(', ')
        else
          raise ArgumentError, "invalid citation for #{@node.title.inspect}", @node.trace
        end
      %>

output: |
  <%
    # set default parameter values
    $title   = '$title' unless defined? $title
    $authors = {'$authors' => nil} unless defined? $authors
    $date    = Time.now.strftime("%d %B %Y") unless defined? $date

    # get a list of all icons used in the document, if any
    icons_used = $icons_used if defined? $icons_used and not $icons_used.empty?

    abstract = @types['abstract'].first

    references = @types['reference']
    references = nil if references.empty?

    # compute table of contents
      tocBuilder = lambda do |n|
        if @spec['nodes'][n.type]['toc']
          entry = '%s<a id="%s" href="#%s">%s</a>' % [
            (n.index.to_s + '&nbsp;&nbsp;' if n.index),
            n.list_url,
            n.url,
            n.title.to_s.to_inline_html
          ]
          nested = n.children.inject('') {|s,c| s << tocBuilder[c] }

          %{<li>#{entry}#{ "<ul>#{nested}</ul>" unless nested.empty? }</li>}
        else
          ''
        end
      end

      toc = @roots.inject('') {|s,n| s << tocBuilder[n] }

    # compute list of figures
      lofEnums = {} # type => nodes

      @spec['nodes'].each_pair do |name, info|
        if info['lof']
          nodes = @types[name]
          lofEnums[name] = nodes unless nodes.empty?
        end
      end

      lofSections = []

      lof = lofEnums.sort.map do |(type, nodes)|
        nested = nodes.map do |n|
          %{<li><a id="#{n.list_url}" href="##{n.url}">#{n.title.to_s.to_inline_html}</a></li>}
        end

        label = type.capitalize << 's'
        lofSections << label

        %{<h1 id="#{label}" class="title"><a class="here" href="##{label}">#{label}</a></h1> <ol>#{nested}</ol>}
      end
  %>
  <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
  <html xmlns="http://www.w3.org/1999/xhtml">
    <head>
      <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
      <meta name="date" content="<%= $date %>"/>
      <meta name="author" content="<%= $authors.keys.join(', ') %>"/>
      <% $feeds.each_pair do |url, fmt| %>
      <link rel="alternate" type="application/<%= fmt %>+xml" href="<%= url %>"/>
      <meta name="generator" content="<%= ERBook::PROJECT %> <%= ERBook::VERSION %>"/>
      <% end if $feeds %>
      <title><%= $title.to_s.to_inline_html %></title>

      <% if icons_used %>
      <style type="text/css" media="screen">
        <% icons_used.each do |icon| %>
        .<%= icon.css_class %> {
          background-image: url(data:image/<%= icon.format %>;base64,<%= icon.data.tr("\n", '') %>);
          background-repeat: no-repeat;
          padding-left: 4em;
        }
        <% end %>
      </style>

      <style type="text/css" media="print">
        <% icons_used.each do |icon| %>
        .<%= icon.css_class %> {
          <%
            # we use list-style-image instead of background-image because the
            # latter is neither printable nor shown in print preview by default
            # in most browsers
            #
            # see http://www.web-graphics.com/mtarchive/001703.php
          %>
          display: list-item;
          list-style-image: url(data:image/<%= icon.format %>;base64,<%= icon.data.tr("\n", '') %>);
          list-style-position: inside;
        }

        .<%= icon.css_class %> li {
          list-style-image: none;
        }
        <% end %>
      </style>
      <% end %>

      <%
        styles = @spec['styles']
        (styles.keys - %w[common]).each do |media|
      %>
      <style type="text/css" media="<%= media %>">
      <!--
        <%= styles['common'] %>
        <%= styles[media] %>
      -->
      </style>
      <% end %>
    </head>
    <body>
      <%
        nav = [
          ('Abstract' if abstract),
          'Contents',
          lofSections,
          ('References' if references)
        ].flatten.compact

        if nav.length > 1
      %>
      <div class="nav">
        <%=
          nav.map do |section|
            %{<a href="##{section}">#{section}</a>}
          end.join(' &middot; ')
        %>
      </div>
      <% end %>

      <br style="display: none"/>
      <hr style="display: none"/>
      <br style="display: none"/>

      <%= node = @types['header_outside_above'].first and node.output %>
      <div id="header">
      <%= node = @types['header_inside_above'].first and node.output %>
      <% if header = @types['header'].first %>
        <%= header.output %>
      <% else %>
        <%= $logo if defined? $logo %>
        <h1 class="title"><a class="here" href="#"><%= $title.to_s.to_inline_html %></a></h1>
        <h2 class="authors"><%=
          $authors.map do |(name, url)|
            if url
              %{<a href="#{url}">#{name}</a>}
            else
              name
            end
          end.join(', ')
        %></h2>
        <h3 class="date"><%= $date %></h3>
      <% end %>
      <%= node = @types['header_inside_below'].first and node.output %>
      </div>
      <%= node = @types['header_outside_below'].first and node.output %>

      <%= abstract.output if abstract %>

      <br style="display: none"/>
      <hr style="display: none"/>
      <br style="display: none"/>

      <% unless toc.empty? %>
        <div id="<%= label = 'Contents' %>">
          <h1 class="title"><a class="here" href="#<%= label %>"><%= label %></a></h1>
          <ul>
            <%= toc %>

            <% if references %>
            <li><a href="#References">References</a></li>
            <% end %>
          </ul>
        </div>
      <% end %>

      <% unless lof.empty? %>
        <div id="lof"><%= lof %></div>
      <% end %>

      <br style="display: none"/>
      <hr style="display: none"/>
      <br style="display: none"/>

      <div id="content"><%= @content %></div>

      <% if references %>
      <div id="References">
        <h1 class="title"><a class="here" href="#References">References</a></h1>
        <ol>
        <% references.each do |n| %>
          <li id="<%= n.url %>"><%= n.content.to_s.to_html %></li>
        <% end %>
        </ol>
      </div>
      <% end %>

      <br style="display: none"/>
      <hr style="display: none"/>
      <br style="display: none"/>

      <%= node = @types['footer_outside_above'].first and node.output %>
      <div id="footer">
      <%= node = @types['footer_inside_above'].first and node.output %>
      <% if footer = @types['footer'].first %>
        <%= footer.content.to_s.to_html %>
      <% else %>
        Generated by <a href="<%= ERBook::WEBSITE %>"><%= ERBook::PROJECT %> <%= ERBook::VERSION %></a> on <%= Time.now %>.
      <% end %>

      <% if icons_used %>
        <div id="footer-credits">
          <% icons_used.uniq.each do |icon| %>
          <span class="<%= icon.css_class %>" style="float: right">&nbsp;</span>
          <% end %>

          <p>The admonition graphics used in this document are Copyright &copy; 2005 <a href="http://tango.freedesktop.org">Tango Desktop Project</a>. They are part of the <a href="http://tango.freedesktop.org/Tango_Icon_Library">Tango Icon Theme</a> set, which is distributed under the <a href="http://creativecommons.org/licenses/by-sa/2.5/">Creative Commons Attribution-ShareAlike 2.5 License Agreement</a>.</p>
        </div>
      <% end %>
      <%= node = @types['footer_inside_below'].first and node.output %>
      </div>
      <%= node = @types['footer_outside_below'].first and node.output %>
    </body>
  </html>

styles:
  common: |
    body
    {
        color               : #000000;
        background-color    : #FFFFFF;
        line-height         : 1.5em;
        font-family         : Calibri, Verdana, sans-serif;
    }

    /* emphasis */

      em,
      blockquote
      {
          font-family       : Cambria, Georgia, serif;
      }

      em
      {
          background-color  : #FFFFE0;
      }

      blockquote
      {
          margin            : 2em;
          color             : #333;
          font-style        : italic;
      }

      hr
      {
          height            : 0;
          border            : 0;
          border-top        : 2px solid #FF0000;
      }

    /* source code */

      tt,
      code,
      pre
      {
          font-family       : Consolas, "Lucida Console", monospace;
      }

      tt
      {
          background-color  : #F0F8FF;
      }

      /* output of the syntax coloring library */
      .code
      {
          background-color  : #FFFFF0;
      }

      pre
      {
          cursor            : text;
          line-height       : normal;
          border            : 1px dashed #C0C0C0;
          background-color  : #F5FFDF;
          padding           : 1em;
          overflow          : auto;
      }

    /* hyperlinks */

      a > img
      {
          border            : none;
      }

      a img
      {
          _border           : none; /* for IE6 */
      }

      a.here:link,
      a.here:visited
      {
          color             : #000000;
      }

    /* lists */

      #content li:first-child
      {
          margin-top        : 1em;
      }

      #content li
      {
          margin-bottom     : 1em;
      }

    /* headings */

      h1,
      h2,
      h3,
      h4,
      h5,
      h6,
      .title
      {
          font-weight       : lighter;
          font-family       : Constantia, "Book Antiqua", "URW Bookman L", serif;
      }

      #lof h1,
      #lof h2,
      #lof h3,
      #lof h4,
      #lof h5,
      #lof h6
      {
          margin-top        : 1.25em;
      }

      #content h1,
      #content h2,
      #content h3,
      #content h4,
      #content h5,
      #content h6
      {
          margin-top        : 2.5em;
          line-height       : 1.25em;
      }

      #content h1
      {
          font-size         : 2.0em;
      }

      #content h2
      {
          font-size         : 1.8em;
      }

      #content h3
      {
          font-size         : 1.6em;
      }

      #content h4
      {
          font-size         : 1.4em;
      }

      #content h5
      {
          font-size         : 1.2em;
      }

      #content h6
      {
          font-size         : 1.0em;
      }

    /* tables */

      table
      {
          border-collapse   : collapse; /* no spacing between cell borders */
          margin            : auto; /* center horizontally */
          margin-top        : 1em;
      }

      th,
      td
      {
          padding           : 1em;
          border            : 1px solid #bbb;
          vertical-align    : top;
          background-color  : inherit;
          _background-color : #FFFFFF; /* for IE6 */
      }

      th
      {
          background-color  : #F5F5F5;
      }

    /* document structure */

      .nav
      {
          text-align        : center;
          margin-bottom     : 4em;
      }

      #header
      {
          text-align        : center;
      }

      .header_outside_above,
      #header,
      .header_outside_below
      {
          margin-bottom     : 5em;
      }

      .footer_outside_above,
      #footer,
      .footer_outside_below
      {
          margin-top        : 5em;
      }

      #header .header_inside_above,
      #footer .footer_inside_above
      {
          margin-bottom     : 4em;
      }

      #header .header_inside_below,
      #footer .footer_inside_below
      {
          margin-top        : 4em;
      }

      #Abstract
      {
          margin-bottom     : 5em;
      }

      #Contents li
      {
          list-style-type   : none;
      }

      #Contents li ul
      {
          padding-bottom    : 1em;
          border-left       : thick solid #F5F5F5;
          _border-left      : none; /* for IE6 */
      }

      #Contents li ul:hover
      {
          border-color      : #DCDCDC;
      }

      #Contents > ul
      {
          padding-left      : 1em;
      }

      #References
      {
          margin-top        : 5em;
      }

      #footer
      {
          border-top        : thick dotted #DCDCDC;
          padding-top       : 1em;
          text-align        : center;
      }

      #footer-credits
      {
          margin-top        : 2em;
      }

    /* document nodes */

      .part    > .title,
      .chapter > .title
      {
          padding-bottom    : 0.5em;
      }

      .part    > .title > big,
      .chapter > .title > big
      {
          display           : block;
          margin-top        : 0.25em;
      }

      .part    .title big,
      .chapter .title big
      {
          _display          : block; /* for IE6 */
          _margin-top       : 0.25em; /* for IE6 */
          _margin-bottom    : 0.75em; /* for IE6 */
      }

      .paragraph > .title,
      .tip       > .title,
      .note      > .title,
      .caution   > .title,
      .warning   > .title,
      .important > .title,
      .figure    > .title,
      .table     > .title,
      .example   > .title,
      .equation  > .title,
      .procedure > .title
      {
          font-size         : large;
          margin-top        : 2em;
      }

      .paragraph .title,
      .tip       .title,
      .note      .title,
      .caution   .title,
      .warning   .title,
      .important .title,
      .figure    .title,
      .table     .title,
      .example   .title,
      .equation  .title,
      .procedure .title
      {
          _font-size        : large; /* for IE6 */
          _font-weight      : bold; /* large is not bold in IE6 */
          _margin-top       : 2em; /* for IE6 */
      }

      .tip      ,
      .note     ,
      .caution  ,
      .warning  ,
      .important,
      .figure   ,
      .table    ,
      .example  ,
      .equation ,
      .procedure
      {
          margin            : 3em;
      }

      .tip       > .icon,
      .note      > .icon,
      .caution   > .icon,
      .warning   > .icon,
      .important > .icon
      {
          float             : left;
          margin            : 0 1em 1em 0; /* top right bottom left */
      }

      .tip       .icon,
      .note      .icon,
      .caution   .icon,
      .warning   .icon,
      .important .icon
      {
          _display          : none; /* IE6 cannot display embedded images */
      }

      .figure > .title
      {
          text-align        : center;
      }

      .figure .title
      {
          _text-align       : center; /* for IE6 */
      }

      .figure > .content img
      {
          display           : block;
          margin            : auto;
      }

      .figure .content img
      {
          _display          : block; /* for IE6 */
          _margin           : auto; /* for IE6 */
      }

  screen: |
    body
    {
        margin              : auto;
        max-width           : 36em;
        padding             : 0.5em;
    }

    /* hyperlinks */

      a:link
      {
          color             : #0000FF;
          text-decoration   : none;
      }

      a:visited
      {
          color             : #C71585;
          text-decoration   : none;
      }

      a:hover
      {
          color             : #FF0000;
          text-decoration   : underline;
      }

      a:target
      {
          color             : #FF0000;
          font-weight       : bold;
      }

  print: |
    /* source code */

      tt
      {
          background-color  : inherit;
          font-weight       : normal;
      }

      pre,
      .code
      {
          border            : none;
          background-color  : inherit;
      }

    /* headings */

      h1,
      h2,
      h3,
      h4,
      h5,
      h6
      {
          font-weight       : normal;
      }

    /* hyperlinks */

      /* blend all hyperlinks with normal text */
      a:link,
      a:visited
      {
          color             : #000000;
          text-decoration   : none;
      }

      /* emphasize external and cross-reference hyperlinks */
      a:not([href^="#"]):link,
      a:not([href^="#"]):visited,
      a.xref[title]:link,
      a.xref[title]:visited
      {
          color             : #0000FF;
          text-decoration   : underline;
          font-weight       : bolder;
      }

      /* show URL of destination for external hyperlinks */
      a:not([href^="#"]):after
      {
          content           : " " attr(href);
          font-family       : Consolas, "Lucida Console", monospace;
      }

      /* show name of destination for cross-references */
      a.xref[title]:after
      {
          content           : " " attr(title);
      }

      a:after
      {
          font-weight       : normal;
          font-size         : smaller;
      }

    /* document structure */

      .nav,
      #lof
      {
          display           : none;
      }

      #Contents,
      .part,
      .chapter,
      #References
      {
          page-break-before : always;
      }

    /* document nodes */

      .part    > .title > big,
      .chapter > .title > big
      {
          padding-bottom    : 0.5em;
      }

      .part    .title big,
      .chapter .title big
      {
          _padding-bottom   : 0.5em; /* for IE6 */
      }

